version: "3.9"

services:

  nginx:
    container_name: proxy_nginx
    depends_on:
      - app
      - postgres
      - pgadmin
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.deploy.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      - ./dhparam:/etc/ssl/certs
    restart: unless-stopped
    networks:
      - networkApp
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/www/certbot
  #   depends_on:
  #     - nginx
  #   networks:
  #     - networkApp
  #   command: certonly --webroot -w /var/www/certbot --email an3wer@yandex.ru --agree-tos --no-eff-email --staging -d altai.ya-praktikum.tech

  app:
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    expose:
      - "${SERVER_PORT}"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - networkApp
    depends_on:
      - postgres

  postgres:
    image: postgres:14-alpine
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    hostname: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - networkApp
  
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      POSTGRES_HOST_AUTH_METHOD: trust
    expose:
      - "80"
    ports:
      - "8080:80"
    restart: always
    volumes:
      - pg-admin-data:/var/lib/pgadmin
    networks:
      - networkApp

networks:
  networkApp:
    driver: bridge

volumes:
  pgdata:
  pg-admin-data:
  certbot-etc:
  certbot-var:
